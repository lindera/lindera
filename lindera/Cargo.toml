[package]
name = "lindera"
version = "1.0.0"
edition = "2024"
description = "A morphological analysis library."
documentation = "https://docs.rs/lindera"
homepage = "https://github.com/lindera/lindera"
repository = "https://github.com/lindera/lindera"
readme = "README.md"
keywords = ["morphological", "analysis", "library"]
categories = ["text-processing"]
license = "MIT"

[features]
ipadic = ["lindera-ipadic/ipadic"] # Enable Japanese dictionary (IPADIC)
ipadic-neologd = [
    "lindera-ipadic-neologd/ipadic-neologd",
] # Enable Japanese dictionary (IPADIC NEologd)
unidic = ["lindera-unidic/unidic"] # Enable Japanese dictionary (UniDic)
ko-dic = ["lindera-ko-dic/ko-dic"] # Enable Korean dictionary (ko-dic)
cc-cedict = [
    "lindera-cc-cedict/cc-cedict",
] # Enable Chinese dictionary (CC-CEDICT)

cjk = [
    "ipadic",
    "ko-dic",
    "cc-cedict",
] # Enable CJK dictionaries (IPADIC, ko-dic, CC-CEDICT)
cjk2 = [
    "unidic",
    "ko-dic",
    "cc-cedict",
] # Enable CJK dictionaries (UniDic, ko-dic, CC-CEDICT)
cjk3 = [
    "ipadic-neologd",
    "ko-dic",
    "cc-cedict",
] # Enable CJK dictionaries (IPADIC NEologd, ko-dic, CC-CEDICT)

embedded-ipadic = [
    "ipadic",
    "lindera-ipadic/embedded-ipadic",
] # Embed IPADIC dictionary in the binary
embedded-ipadic-neologd = [
    "ipadic-neologd",
    "lindera-ipadic-neologd/embedded-ipadic-neologd",
] # Embed IPADIC-NEologd dictionary in the binary
embedded-unidic = [
    "unidic",
    "lindera-unidic/embedded-unidic",
] # Embed UniDic dictionary in the binary
embedded-ko-dic = [
    "ko-dic",
    "lindera-ko-dic/embedded-ko-dic",
] # Embed ko-dic dictionary in the binary
embedded-cc-cedict = [
    "cc-cedict",
    "lindera-cc-cedict/embedded-cc-cedict",
] # Embed CC-CEDICT dictionary in the binary

embedded-cjk = [
    "embedded-ipadic",
    "embedded-ko-dic",
    "embedded-cc-cedict",
] # Embed CJK dictionaries (IPADIC, ko-dic, CC-CEDICT) in the binary
embedded-cjk2 = [
    "embedded-unidic",
    "embedded-ko-dic",
    "embedded-cc-cedict",
] # Embed CJK dictionaries (UniDic, ko-dic, CC-CEDICT) in the binary
embedded-cjk3 = [
    "embedded-ipadic-neologd",
    "embedded-ko-dic",
    "embedded-cc-cedict",
] # Embed CJK dictionaries (IPADIC NEologd, ko-dic, CC-CEDICT) in the binary

compress = [
    "lindera-dictionary/compress",
    "lindera-ipadic?/compress",
    "lindera-ipadic-neologd?/compress",
    "lindera-unidic?/compress",
    "lindera-ko-dic?/compress",
    "lindera-cc-cedict?/compress",
] # Compress dictionaries
mmap = ["lindera-dictionary/mmap"] # Use memory-mapped file

default = ["compress", "mmap"]

[dependencies]
anyhow.workspace = true
bincode.workspace = true
byteorder.workspace = true
csv.workspace = true
kanaria.workspace = true
once_cell.workspace = true
regex.workspace = true
serde.workspace = true
serde_json.workspace = true
serde_yaml.workspace = true
strum.workspace = true
strum_macros.workspace = true
unicode-blocks.workspace = true
unicode-normalization.workspace = true
unicode-segmentation.workspace = true
yada.workspace = true

lindera-dictionary = { workspace = true }
lindera-ipadic = { workspace = true, optional = true }
lindera-ipadic-neologd = { workspace = true, optional = true }
lindera-unidic = { workspace = true, optional = true }
lindera-ko-dic = { workspace = true, optional = true }
lindera-cc-cedict = { workspace = true, optional = true }


[dev-dependencies]
serde_json.workspace = true
criterion.workspace = true
once_cell.workspace = true

[[bench]]
name = "bench_ipadic"
harness = false
required-features = ["ipadic"]

[[bench]]
name = "bench_unidic"
harness = false
required-features = ["unidic"]

[[bench]]
name = "bench_ko_dic"
harness = false
required-features = ["ko-dic"]

[[bench]]
name = "bench_cc_cedict"
harness = false
required-features = ["cc-cedict"]

[[bench]]
name = "bench_ipadic_neologd"
harness = false
required-features = ["ipadic-neologd"]
