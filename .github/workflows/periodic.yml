name: Periodic

on:
  workflow_dispatch:
  schedule:
    - cron: 0 0 * * SUN

jobs:
  fmt:
    name: Format
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
        toolchain: [stable]
    runs-on: ${{ matrix.platform.runner }}
    steps:
      - name: Run checkout
        uses: actions/checkout@v4

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          components: rustfmt, clippy

      - name: Run format
        run: cargo fmt --all -- --check

  check:
    name: Check
    needs: [fmt]
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - runner: macOS-latest
            target: x86_64-apple-darwin
          - runner: macOS-latest
            target: aarch64-apple-darwin
          - runner: windows-latest
            target: x86_64-pc-windows-msvc
        toolchain: [stable, beta, nightly]
    runs-on: ${{ matrix.platform.runner }}
    steps:
      - name: Run checkout
        uses: actions/checkout@v4

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          components: rustfmt, clippy

      - name: Run check
        run: cargo check --target "${{ matrix.platform.target }}" --all-features"

  test:
    name: Test
    needs: [check]
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - runner: macOS-latest
            target: x86_64-apple-darwin
          - runner: macOS-latest
            target: aarch64-apple-darwin
          - runner: windows-latest
            target: x86_64-pc-windows-msvc
        toolchain: [stable, beta, nightly]
        features: ["ipadic", "ko-dic", "cc-cedict"]
    runs-on: ${{ matrix.platform.runner }}
    steps:
      - name: Run checkout
        uses: actions/checkout@v4

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.platform.target }}
          components: rustfmt, clippy

      - name: Run test
        run: cargo test --target "${{ matrix.platform.target }}" --features "${{ matrix.features }}"
